clear
clc

% Chargement le fichier audio
[s,Fs] = audioread('numero4.wav');

L = length(s); % Longueur du signal original
Ts = 1/Fs; % Période du signal originial
Fspas = Fs/(L-1); % Pas fréquentiel du signal original

t = 0:Ts:(L-1)*Ts; % intervalle de temps
f = 0:Fspas:Fs; % intervalle de fréquences d'étude

% Filtrage du 440 Hz
load 'F440.mat';
A=F440.tf.num;
B=F440.tf.den;
y=filter(A,B,s);

% Décimation du signal
% fréquences [697 +- 10.455 Hz; 1637 +- 24.555 Hz]
Fd = 2000; % fréquences fondamentales inférieures à 2000HZ
Fse = 2*Fd; % fréquence sous échantillonné
k = floor(Fs/Fse); % facteur de décimation

% Signal décimé
ydec = decimate(y,k);
Tydec = 1/Fse; % période de sous échantillonnage
Lydec = length(ydec); % longueur du signal décimé
Fsepas = Fse/(Lydec-1); % pas fréquentiel du signal décimé

tdec = 0:Tydec:(Lydec-1)*Tydec; % intervalle de temps
fdec = 0:Fsepas:Fse; % intervalle de fréquences d'étude

% Puissance du signal décimé
Powerydec = ydec.*ydec;

% FFT du signal d'origine
Sfft = fft(s); % transformée de Fourier du signal d'origine
Sabs = abs(Sfft); % abs de la fft du signal s
Sdb = 20*log10(Sabs); % gain en dB du signal s

% FFT du signal filtré 440Hz
Yfft = fft(y); % transformée de Fourier du signal filtré 440 Hz
Yabs = abs(Yfft); % abs de la fft du signal filtré 440 Hz
Ydb = 20*log10(Yabs); % gain en dB du signal filtré 440 Hz

% FFT du signal filtré 440 Hz et décimé
Ydecfft = fft(ydec); % transformée de Fourier du signal filtré 440 Hz et décimé
Ydecabs = abs(Ydecfft); % abs de la fft du signal filtré 440 Hz et décimé
Ydecdb = 20*log10(Ydecabs); % gain en dB du signal filtré 440 Hz et décimé

% Détermination de la puissance seuil bruit
% ordre 119
noCoeffs = 120;
coeffs = ones(noCoeffs,1)/noCoeffs;
filteredSignal = filter(coeffs,1,Powerydec);
Pbruitseuil = max(filteredSignal)/2;

% presence = filteredSignal>Pbruitseuil;
K = 70;
presence = zeros(1,Lydec);
for n=1:Lydec
    if filteredSignal(n) < Pbruitseuil
        presence(n)=0;
    else
        presence(n)=1;
    end
end

% Isolation des fréquences
test=(0:Tydec:(Lydec-1)/Fse);
NFFT = 2^nextpow2(Lydec);
Ydectest = fft(ydec,NFFT);
ftest = Fse/2*linspace(0,1,NFFT/2+1);
Mag=2*abs(Ydectest(1:NFFT/2+1));

% Récupérer uniquement un signal avec les notes
signal = zeros(1,Lydec);
for n=1+K:Lydec-K
    signal(n-K) = presence(n)*ydec(n);
end

% Récupérer les intervales des notes
intervales = zeros(1,100); % changer la taille en fonction du nombre de notes
indice = 1;
for n=1:(length(presence)-1)
    if (presence(n)==0) && (presence(n+1)==1)
        intervales(indice) = n+1;
        indice = indice + 1;
    end
    if (presence(n)==1) && (presence(n+1)==0)
        intervales(indice) = n;
        indice = indice + 1;
    end
end

% Récupérer uniquement les intervales non nuls
intervalesFinal = zeros(1,indice-1);
for n=1:indice-1
   intervalesFinal(n) = intervales(n);
end

%------------------------------------------------------------------

% valeurs de références
fbref = [ 697, 770, 852, 941 ];
fhref = [ 1209, 1336, 1477, 1637 ];
fref = [697 770 852 941 1209 1336 1477 1637];

dtmf = [ ['1', '2', '3', 'a'];
         ['4', '5', '6', 'b'];
         ['7', '8', '9', 'c'];
         ['*', '0', '#', 'd'];
       ];

F1=zeros(1,8);
F2=zeros(1,8);
for l=1:2:(length(intervalesFinal))
x1 = intervalesFinal(l);
x2 = intervalesFinal(l+1);
    
% FFT portion du signal
portionsignal = signal(x1:x2);
portion = abs(fft(portionsignal));
%fAxis=-Fse/2:Fse/2048:Fse/2-Fse/2048;

indexflow1 = round(600*length(portionsignal)/Fse);
indexflow2 = round(1000*length(portionsignal)/Fse);

indexfhigh1 = round(1100*length(portionsignal)/Fse);
ifhigh2 = round(1600*length(portionsignal)/Fse);

[M,I1] = max(portion(indexflow1:indexflow2));
IndexBasseFq = I1+indexflow1-1;
freq1 = IndexBasseFq*Fse/length(portionsignal);

[H,G] = max(portion(ifhigh1:ifhigh2));
IndexHauteFq = G+ifhigh1-1;
freq2 = IndexHauteFq*Fse/length(portionsignal);

% Détermination du bouton
for n=1:length(fbref)
    F1(n)=abs(freq1-fbref(n));
    F2(n)=abs(freq2-fbref(n));
end
for n=length(fbref)+1:(length(fbref)+length(fhref))
    F1(n)=abs(freq1-fhref(n-4));
    F2(n)=abs(freq2-fhref(n-4));
end

valeur1=find(F1==min(F1));
valeur2=find(F2==min(F2));

if(valeur1>4)
    valeur1=valeur1-4;
elseif(valeur2>4)
    valeur2=valeur2-4;
end

if(valeur1==1 && valeur2==1)
    disp(dtmf(1));
elseif(valeur1==2 && valeur2==1)
    disp(dtmf(2));
elseif(valeur1==3 && valeur2==1)
    disp(dtmf(3));
elseif(valeur1==4 && valeur2==1)
    disp(dtmf(4));
elseif(valeur1==1 && valeur2==2)
    disp(dtmf(5));
elseif(valeur1==2 && valeur2==2)
    disp(dtmf(6));
elseif(valeur1==3 && valeur2==2)
    disp(dtmf(7));
elseif(valeur1==4 && valeur2==2)
    disp(dtmf(8));
elseif(valeur1==1 && valeur2==3)
    disp(dtmf(9));
elseif(valeur1==2 && valeur2==3)
    disp(dtmf(10));
elseif(valeur1==3 && valeur2==3)
    disp(dtmf(11));
elseif(valeur1==4 && valeur2==3)
    disp(dtmf(12));
elseif(valeur1==1 && valeur2==4)
    disp(dtmf(13));
elseif(valeur1==2 && valeur2==4)
    disp(dtmf(14));
elseif(valeur1==3 && valeur2==4)
    disp(dtmf(15));
elseif(valeur1==4 && valeur2==4)
    disp(dtmf(16));
end

end
%------------------------------------------------------------------

% les figures affichées
figure(1)
% Signal source
subplot(5,1,1)
plot(t,s)
xlabel('temps en s')
ylabel('amplitude')
title('signal source')

% Signal filtré 440Hz
subplot(5,1,2)
plot(t,y)
xlabel('temps en s')
ylabel('amplitude')
title('signal source, 440Hz filtré')

% Signal décimé
subplot(5,1,3)
plot(tdec,ydec)
xlabel('temps en s')
ylabel('amplitude')
title('signal décimé')

% Présence signal
subplot(5,1,4)
plot(tdec,presence,'r')
xlabel('temps en s')
ylabel('présence/absence')
title('présence du signal décimé')

% Signal décimé
subplot(5,1,5)
plot(tdec,signal)
xlabel('temps en s')
ylabel('amplitude')
title('Signal x Présence')

figure(2)
% Gain en dB du signal s
subplot(3,1,1)
plot(f,Sdb)
xlabel('fréquence en Hz')
ylabel('Gains en dB')
title('fft Signal source')

% Gain en dB du signal décimé
subplot(3,1,2)
plot(f,Ydb);
xlabel('fréquence en Hz')
ylabel('Gains en dB')
title('fft signal filtré 440 Hz')

% Gain en dB du signal décimé
subplot(3,1,3)
plot(fdec,Ydecdb);
xlabel('fréquence en Hz')
ylabel('Gains en dB')
title('fft signal filtré 440 Hz et décimé')

% Présence des fréquences dans le signal
figure(3)
subplot(2,1,1)
plot(ftest,Mag)
grid on
title('Magnitude Spectrum')
xlabel('Frequency (Hz)')
ylabel('|X(f)|')
legend('Frequency Spectrum')
subplot(2,1,2)
periodogram(ydec,[],[],Fse)
